{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "termodaq_api"
  },
  "schemes": [
    "http"
  ],
  "host": "api.termodaq.com.ve",
  "basePath": "/api",
  "paths": {
    "/usuario/{id}/accessTokens/{fk}": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Buscar un elemento relacionado por id para accessTokens.",
        "operationId": "usuario.prototype.__findById__accessTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para accessTokens",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "usuario"
        ],
        "summary": "Suprimir un elemento relacionado por id para accessTokens.",
        "operationId": "usuario.prototype.__destroyById__accessTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para accessTokens",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "usuario"
        ],
        "summary": "Actualizar un elemento relacionado por id para accessTokens.",
        "operationId": "usuario.prototype.__updateById__accessTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para accessTokens",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/{id}/perfil": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Capta la relación hasOne perfil.",
        "operationId": "usuario.prototype.__get__perfil",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/perfil"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Crea una nueva instancia en perfil de este modelo.",
        "operationId": "usuario.prototype.__create__perfil",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/perfil"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/perfil"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "usuario"
        ],
        "summary": "Actualizar perfil de este modelo.",
        "operationId": "usuario.prototype.__update__perfil",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/perfil"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/perfil"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "usuario"
        ],
        "summary": "Suprime perfil de este modelo.",
        "operationId": "usuario.prototype.__destroy__perfil",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      }
    },
    "/usuario/{id}/estudio/{fk}": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Buscar un elemento relacionado por id para estudio.",
        "operationId": "usuario.prototype.__findById__estudio",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para estudio",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "usuario"
        ],
        "summary": "Suprimir un elemento relacionado por id para estudio.",
        "operationId": "usuario.prototype.__destroyById__estudio",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para estudio",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "usuario"
        ],
        "summary": "Actualizar un elemento relacionado por id para estudio.",
        "operationId": "usuario.prototype.__updateById__estudio",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para estudio",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/{id}/accessTokens": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "accessTokens consultas de usuario.",
        "operationId": "usuario.prototype.__get__accessTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessToken"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Crea una nueva instancia en accessTokens de este modelo.",
        "operationId": "usuario.prototype.__create__accessTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "usuario"
        ],
        "summary": "Suprime todos los accessTokens de este modelo.",
        "operationId": "usuario.prototype.__delete__accessTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      }
    },
    "/usuario/{id}/accessTokens/count": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Recuentos accessTokens de usuario.",
        "operationId": "usuario.prototype.__count__accessTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/{id}/estudio": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "estudio consultas de usuario.",
        "operationId": "usuario.prototype.__get__estudio",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/estudio"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Crea una nueva instancia en estudio de este modelo.",
        "operationId": "usuario.prototype.__create__estudio",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "usuario"
        ],
        "summary": "Suprime todos los estudio de este modelo.",
        "operationId": "usuario.prototype.__delete__estudio",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      }
    },
    "/usuario/{id}/estudio/count": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Recuentos estudio de usuario.",
        "operationId": "usuario.prototype.__count__estudio",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Create a new instance of the model and persist it into the data source.",
        "operationId": "usuario.create",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/usuario"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "usuario"
        ],
        "summary": "Patch an existing model instance or insert a new one into the data source.",
        "operationId": "usuario.patchOrCreate",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/usuario"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "usuario"
        ],
        "summary": "Replace an existing model instance or insert a new one into the data source.",
        "operationId": "usuario.replaceOrCreate__put_usuario",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/usuario"
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Find all instances of the model matched by filter from the data source.",
        "operationId": "usuario.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/usuario"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/replaceOrCreate": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Replace an existing model instance or insert a new one into the data source.",
        "operationId": "usuario.replaceOrCreate__post_usuario_replaceOrCreate",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/usuario"
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/upsertWithWhere": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Update an existing model instance or insert a new one into the data source based on the where criteria.",
        "operationId": "usuario.upsertWithWhere",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/usuario"
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/{id}/exists": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Check whether a model instance exists in the data source.",
        "operationId": "usuario.exists__get_usuario_{id}_exists",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "exists": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/{id}": {
      "head": {
        "tags": [
          "usuario"
        ],
        "summary": "Check whether a model instance exists in the data source.",
        "operationId": "usuario.exists__head_usuario_{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "exists": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Find a model instance by {{id}} from the data source.",
        "operationId": "usuario.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/usuario"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "usuario"
        ],
        "summary": "Replace attributes for a model instance and persist it into the data source.",
        "operationId": "usuario.replaceById__put_usuario_{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/usuario"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "usuario"
        ],
        "summary": "Delete a model instance by {{id}} from the data source.",
        "operationId": "usuario.deleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "usuario"
        ],
        "summary": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "usuario.prototype.patchAttributes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/usuario"
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/{id}/replace": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Replace attributes for a model instance and persist it into the data source.",
        "operationId": "usuario.replaceById__post_usuario_{id}_replace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/usuario"
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/findOne": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Find first instance of the model matched by filter from the data source.",
        "operationId": "usuario.findOne",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/usuario"
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/update": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Update instances of the model matched by {{where}} from the data source.",
        "operationId": "usuario.updateAll",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "description": "Information related to the outcome of the operation",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of instances updated",
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/count": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Count instances of the model matched by where from the data source.",
        "operationId": "usuario.count",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/change-stream": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Create a change stream.",
        "operationId": "usuario.createChangeStream__post_usuario_change-stream",
        "parameters": [
          {
            "name": "options",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "file"
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Create a change stream.",
        "operationId": "usuario.createChangeStream__get_usuario_change-stream",
        "parameters": [
          {
            "name": "options",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "file"
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/login": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Login a user with username/email and password.",
        "operationId": "usuario.login",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Related objects to include in the response. See the description of return value for more details.",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "description": "El cuerpo de respuesta contiene propiedades de la AccessToken creada durante el inicio de la sesión.\nDependiendo del valor del parámetro `include`, el cuerpo puede contener propiedades adicionales:\n\n  - `user` - `U+007BUserU+007D` - Datos del usuario conectado actualmente. (`include=user`)\n\n",
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/usuario/logout": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Logout a user with access token.",
        "operationId": "usuario.logout",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      }
    },
    "/usuario/{id}/verify": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Trigger user's identity verification with configured verifyOptions",
        "operationId": "usuario.prototype.verify",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuario id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      }
    },
    "/usuario/confirm": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Confirm a user registration with identity verification token.",
        "operationId": "usuario.confirm",
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "redirect",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      }
    },
    "/usuario/reset": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Reset password for a user with email.",
        "operationId": "usuario.resetPassword",
        "parameters": [
          {
            "name": "options",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      }
    },
    "/usuario/change-password": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Change a user's password.",
        "operationId": "usuario.changePassword",
        "parameters": [
          {
            "name": "oldPassword",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "newPassword",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      }
    },
    "/usuario/reset-password": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Reset user's password via a password-reset token.",
        "operationId": "usuario.setPassword",
        "parameters": [
          {
            "name": "newPassword",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      }
    },
    "/estudio/{id}/ficha": {
      "get": {
        "tags": [
          "estudio"
        ],
        "summary": "Capta la relación hasOne ficha.",
        "operationId": "estudio.prototype.__get__ficha",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "estudio id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/ficha"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "estudio"
        ],
        "summary": "Crea una nueva instancia en ficha de este modelo.",
        "operationId": "estudio.prototype.__create__ficha",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "estudio id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ficha"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/ficha"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "estudio"
        ],
        "summary": "Actualizar ficha de este modelo.",
        "operationId": "estudio.prototype.__update__ficha",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "estudio id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ficha"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/ficha"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "estudio"
        ],
        "summary": "Suprime ficha de este modelo.",
        "operationId": "estudio.prototype.__destroy__ficha",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "estudio id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          }
        },
        "deprecated": false
      }
    },
    "/estudio": {
      "post": {
        "tags": [
          "estudio"
        ],
        "summary": "Create a new instance of the model and persist it into the data source.",
        "operationId": "estudio.create",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "estudio"
        ],
        "summary": "Patch an existing model instance or insert a new one into the data source.",
        "operationId": "estudio.patchOrCreate",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "estudio"
        ],
        "summary": "Replace an existing model instance or insert a new one into the data source.",
        "operationId": "estudio.replaceOrCreate__put_estudio",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "estudio"
        ],
        "summary": "Find all instances of the model matched by filter from the data source.",
        "operationId": "estudio.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/estudio"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/estudio/replaceOrCreate": {
      "post": {
        "tags": [
          "estudio"
        ],
        "summary": "Replace an existing model instance or insert a new one into the data source.",
        "operationId": "estudio.replaceOrCreate__post_estudio_replaceOrCreate",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      }
    },
    "/estudio/upsertWithWhere": {
      "post": {
        "tags": [
          "estudio"
        ],
        "summary": "Update an existing model instance or insert a new one into the data source based on the where criteria.",
        "operationId": "estudio.upsertWithWhere",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      }
    },
    "/estudio/{id}/exists": {
      "get": {
        "tags": [
          "estudio"
        ],
        "summary": "Check whether a model instance exists in the data source.",
        "operationId": "estudio.exists__get_estudio_{id}_exists",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "exists": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/estudio/{id}": {
      "head": {
        "tags": [
          "estudio"
        ],
        "summary": "Check whether a model instance exists in the data source.",
        "operationId": "estudio.exists__head_estudio_{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "exists": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "estudio"
        ],
        "summary": "Find a model instance by {{id}} from the data source.",
        "operationId": "estudio.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "estudio"
        ],
        "summary": "Replace attributes for a model instance and persist it into the data source.",
        "operationId": "estudio.replaceById__put_estudio_{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "estudio"
        ],
        "summary": "Delete a model instance by {{id}} from the data source.",
        "operationId": "estudio.deleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "estudio"
        ],
        "summary": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "estudio.prototype.patchAttributes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "estudio id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      }
    },
    "/estudio/{id}/replace": {
      "post": {
        "tags": [
          "estudio"
        ],
        "summary": "Replace attributes for a model instance and persist it into the data source.",
        "operationId": "estudio.replaceById__post_estudio_{id}_replace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      }
    },
    "/estudio/findOne": {
      "get": {
        "tags": [
          "estudio"
        ],
        "summary": "Find first instance of the model matched by filter from the data source.",
        "operationId": "estudio.findOne",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/estudio"
            }
          }
        },
        "deprecated": false
      }
    },
    "/estudio/update": {
      "post": {
        "tags": [
          "estudio"
        ],
        "summary": "Update instances of the model matched by {{where}} from the data source.",
        "operationId": "estudio.updateAll",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/estudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "description": "Information related to the outcome of the operation",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of instances updated",
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/estudio/count": {
      "get": {
        "tags": [
          "estudio"
        ],
        "summary": "Count instances of the model matched by where from the data source.",
        "operationId": "estudio.count",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/estudio/change-stream": {
      "post": {
        "tags": [
          "estudio"
        ],
        "summary": "Create a change stream.",
        "operationId": "estudio.createChangeStream__post_estudio_change-stream",
        "parameters": [
          {
            "name": "options",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "file"
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "estudio"
        ],
        "summary": "Create a change stream.",
        "operationId": "estudio.createChangeStream__get_estudio_change-stream",
        "parameters": [
          {
            "name": "options",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "file"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "tags": [
    {
      "name": "usuario"
    },
    {
      "name": "estudio"
    }
  ],
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded",
    "application/xml",
    "text/xml"
  ],
  "produces": [
    "application/json",
    "application/xml",
    "text/xml",
    "application/javascript",
    "text/javascript"
  ],
  "definitions": {
    "x-any": {
      "properties": {}
    },
    "AccessToken": {
      "properties": {
        "id": {
          "type": "string"
        },
        "ttl": {
          "default": 1209600,
          "description": "time to live in seconds (2 weeks by default)",
          "type": "number",
          "format": "double"
        },
        "scopes": {
          "description": "Array of scopes granted to this access token.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "$ref": "#/definitions/ObjectID"
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "perfil": {
      "properties": {
        "nombre": {
          "type": "string"
        },
        "apellido": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "telefono": {
          "type": "string"
        },
        "institucion": {
          "type": "string"
        },
        "pais": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ObjectID"
        },
        "userId": {
          "$ref": "#/definitions/ObjectID"
        }
      },
      "required": [
        "nombre",
        "apellido"
      ],
      "additionalProperties": false
    },
    "estudio": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "id": {
          "$ref": "#/definitions/ObjectID"
        },
        "userId": {
          "$ref": "#/definitions/ObjectID"
        }
      },
      "required": [
        "data"
      ],
      "additionalProperties": false
    },
    "usuario": {
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "realm": {
          "type": "string"
        },
        "emailVerified": {
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/ObjectID"
        }
      },
      "required": [
        "username",
        "email"
      ],
      "additionalProperties": false
    },
    "ficha": {
      "properties": {
        "titulo": {
          "type": "string"
        },
        "lugar": {
          "type": "string"
        },
        "descripcion": {
          "type": "string"
        },
        "investigadores": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "id": {
          "$ref": "#/definitions/ObjectID"
        },
        "userId": {
          "$ref": "#/definitions/ObjectID"
        }
      },
      "required": [
        "titulo",
        "lugar"
      ],
      "additionalProperties": false
    },
    "ObjectID": {
      "type": "string",
      "pattern": "^[a-fA-F\\d]{24}$"
    }
  }
}
